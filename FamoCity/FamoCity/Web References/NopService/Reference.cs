//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace FamoCity.NopService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_INopService", Namespace="http://tempuri.org/")]
    public partial class NopService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderBillingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderShippingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPaidWithMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPendingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrdersStatusCanceledOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginCutomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGenericAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGenericAttributeByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PasswordRecoveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorsFollowingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorsFollowingSeeMoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSlugNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorSeeMoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFollowingProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsVendorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NopService() {
            this.Url = global::FamoCity.Properties.Settings.Default.FamoCity_NopService_NopService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPaymentMethodCompletedEventHandler GetPaymentMethodCompleted;
        
        /// <remarks/>
        public event ExecuteDataSetCompletedEventHandler ExecuteDataSetCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ExecuteScalarCompletedEventHandler ExecuteScalarCompleted;
        
        /// <remarks/>
        public event DeleteOrdersCompletedEventHandler DeleteOrdersCompleted;
        
        /// <remarks/>
        public event AddOrderNoteCompletedEventHandler AddOrderNoteCompleted;
        
        /// <remarks/>
        public event UpdateOrderBillingInfoCompletedEventHandler UpdateOrderBillingInfoCompleted;
        
        /// <remarks/>
        public event UpdateOrderShippingInfoCompletedEventHandler UpdateOrderShippingInfoCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPaidCompletedEventHandler SetOrderPaymentPaidCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPaidWithMethodCompletedEventHandler SetOrderPaymentPaidWithMethodCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPendingCompletedEventHandler SetOrderPaymentPendingCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentRefundCompletedEventHandler SetOrderPaymentRefundCompleted;
        
        /// <remarks/>
        public event SetOrdersStatusCanceledCompletedEventHandler SetOrdersStatusCanceledCompleted;
        
        /// <remarks/>
        public event RegisterNewCustomerCompletedEventHandler RegisterNewCustomerCompleted;
        
        /// <remarks/>
        public event LoginCutomerCompletedEventHandler LoginCutomerCompleted;
        
        /// <remarks/>
        public event UpdateGenericAttributeCompletedEventHandler UpdateGenericAttributeCompleted;
        
        /// <remarks/>
        public event UpdateGenericAttributeByCustomerIdCompletedEventHandler UpdateGenericAttributeByCustomerIdCompleted;
        
        /// <remarks/>
        public event GetCustomerDataCompletedEventHandler GetCustomerDataCompleted;
        
        /// <remarks/>
        public event RegisterNewVendorCompletedEventHandler RegisterNewVendorCompleted;
        
        /// <remarks/>
        public event PasswordRecoveryCompletedEventHandler PasswordRecoveryCompleted;
        
        /// <remarks/>
        public event GetVendorsFollowingCompletedEventHandler GetVendorsFollowingCompleted;
        
        /// <remarks/>
        public event GetVendorsFollowingSeeMoreCompletedEventHandler GetVendorsFollowingSeeMoreCompleted;
        
        /// <remarks/>
        public event getSlugNameCompletedEventHandler getSlugNameCompleted;
        
        /// <remarks/>
        public event ProductVendorCompletedEventHandler ProductVendorCompleted;
        
        /// <remarks/>
        public event ProductVendorSeeMoreCompletedEventHandler ProductVendorSeeMoreCompleted;
        
        /// <remarks/>
        public event GetFollowingProductsCompletedEventHandler GetFollowingProductsCompleted;
        
        /// <remarks/>
        public event GetStatisticsVendorCompletedEventHandler GetStatisticsVendorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetPaymentMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetPaymentMethod([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("GetPaymentMethod", new object[] {
                        usernameOrEmail,
                        userPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string usernameOrEmail, string userPassword) {
            this.GetPaymentMethodAsync(usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string usernameOrEmail, string userPassword, object userState) {
            if ((this.GetPaymentMethodOperationCompleted == null)) {
                this.GetPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("GetPaymentMethod", new object[] {
                        usernameOrEmail,
                        userPassword}, this.GetPaymentMethodOperationCompleted, userState);
        }
        
        private void OnGetPaymentMethodOperationCompleted(object arg) {
            if ((this.GetPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentMethodCompleted(this, new GetPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet ExecuteDataSet([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] sqlStatements, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("ExecuteDataSet", new object[] {
                        sqlStatements,
                        usernameOrEmail,
                        userPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string[] sqlStatements, string usernameOrEmail, string userPassword) {
            this.ExecuteDataSetAsync(sqlStatements, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string[] sqlStatements, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteDataSetOperationCompleted == null)) {
                this.ExecuteDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataSetOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataSet", new object[] {
                        sqlStatements,
                        usernameOrEmail,
                        userPassword}, this.ExecuteDataSetOperationCompleted, userState);
        }
        
        private void OnExecuteDataSetOperationCompleted(object arg) {
            if ((this.ExecuteDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataSetCompleted(this, new ExecuteDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteNonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteNonQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sqlStatement, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("ExecuteNonQuery", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteNonQueryAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteScalar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object ExecuteScalar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sqlStatement, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteScalarAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteScalarOperationCompleted == null)) {
                this.ExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.ExecuteScalarOperationCompleted, userState);
        }
        
        private void OnExecuteScalarOperationCompleted(object arg) {
            if ((this.ExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/DeleteOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
        public OrderError[] DeleteOrders([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] int[] ordersId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("DeleteOrders", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword});
            return ((OrderError[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(int[] ordersId, string usernameOrEmail, string userPassword) {
            this.DeleteOrdersAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(int[] ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.DeleteOrdersOperationCompleted == null)) {
                this.DeleteOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersOperationCompleted);
            }
            this.InvokeAsync("DeleteOrders", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.DeleteOrdersOperationCompleted, userState);
        }
        
        private void OnDeleteOrdersOperationCompleted(object arg) {
            if ((this.DeleteOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrdersCompleted(this, new DeleteOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/AddOrderNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderNote(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string note, bool displayToCustomer, [System.Xml.Serialization.XmlIgnoreAttribute()] bool displayToCustomerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("AddOrderNote", new object[] {
                        orderId,
                        orderIdSpecified,
                        note,
                        displayToCustomer,
                        displayToCustomerSpecified,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void AddOrderNoteAsync(int orderId, bool orderIdSpecified, string note, bool displayToCustomer, bool displayToCustomerSpecified, string usernameOrEmail, string userPassword) {
            this.AddOrderNoteAsync(orderId, orderIdSpecified, note, displayToCustomer, displayToCustomerSpecified, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void AddOrderNoteAsync(int orderId, bool orderIdSpecified, string note, bool displayToCustomer, bool displayToCustomerSpecified, string usernameOrEmail, string userPassword, object userState) {
            if ((this.AddOrderNoteOperationCompleted == null)) {
                this.AddOrderNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderNoteOperationCompleted);
            }
            this.InvokeAsync("AddOrderNote", new object[] {
                        orderId,
                        orderIdSpecified,
                        note,
                        displayToCustomer,
                        displayToCustomerSpecified,
                        usernameOrEmail,
                        userPassword}, this.AddOrderNoteOperationCompleted, userState);
        }
        
        private void OnAddOrderNoteOperationCompleted(object arg) {
            if ((this.AddOrderNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateOrderBillingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderBillingInfo(
                    int orderId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fax, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string company, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string region, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string postalCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("UpdateOrderBillingInfo", new object[] {
                        orderId,
                        orderIdSpecified,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void UpdateOrderBillingInfoAsync(
                    int orderId, 
                    bool orderIdSpecified, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword) {
            this.UpdateOrderBillingInfoAsync(orderId, orderIdSpecified, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void UpdateOrderBillingInfoAsync(
                    int orderId, 
                    bool orderIdSpecified, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.UpdateOrderBillingInfoOperationCompleted == null)) {
                this.UpdateOrderBillingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderBillingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderBillingInfo", new object[] {
                        orderId,
                        orderIdSpecified,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.UpdateOrderBillingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrderBillingInfoOperationCompleted(object arg) {
            if ((this.UpdateOrderBillingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderBillingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateOrderShippingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderShippingInfo(
                    int orderId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fax, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string company, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string region, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string postalCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("UpdateOrderShippingInfo", new object[] {
                        orderId,
                        orderIdSpecified,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void UpdateOrderShippingInfoAsync(
                    int orderId, 
                    bool orderIdSpecified, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword) {
            this.UpdateOrderShippingInfoAsync(orderId, orderIdSpecified, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void UpdateOrderShippingInfoAsync(
                    int orderId, 
                    bool orderIdSpecified, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.UpdateOrderShippingInfoOperationCompleted == null)) {
                this.UpdateOrderShippingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderShippingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderShippingInfo", new object[] {
                        orderId,
                        orderIdSpecified,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.UpdateOrderShippingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrderShippingInfoOperationCompleted(object arg) {
            if ((this.UpdateOrderShippingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderShippingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPaid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPaid(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("SetOrderPaymentPaid", new object[] {
                        orderId,
                        orderIdSpecified,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidAsync(int orderId, bool orderIdSpecified, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidAsync(orderId, orderIdSpecified, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidAsync(int orderId, bool orderIdSpecified, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPaidOperationCompleted == null)) {
                this.SetOrderPaymentPaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPaid", new object[] {
                        orderId,
                        orderIdSpecified,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPaidOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPaidOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPaidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPaidWithMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPaidWithMethod(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string paymentMethodName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("SetOrderPaymentPaidWithMethod", new object[] {
                        orderId,
                        orderIdSpecified,
                        paymentMethodName,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, bool orderIdSpecified, string paymentMethodName, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidWithMethodAsync(orderId, orderIdSpecified, paymentMethodName, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, bool orderIdSpecified, string paymentMethodName, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPaidWithMethodOperationCompleted == null)) {
                this.SetOrderPaymentPaidWithMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidWithMethodOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPaidWithMethod", new object[] {
                        orderId,
                        orderIdSpecified,
                        paymentMethodName,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPaidWithMethodOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPaidWithMethodOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPaidWithMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPaidWithMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPending", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPending(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("SetOrderPaymentPending", new object[] {
                        orderId,
                        orderIdSpecified,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPendingAsync(int orderId, bool orderIdSpecified, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPendingAsync(orderId, orderIdSpecified, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPendingAsync(int orderId, bool orderIdSpecified, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPendingOperationCompleted == null)) {
                this.SetOrderPaymentPendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPendingOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPending", new object[] {
                        orderId,
                        orderIdSpecified,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPendingOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPendingOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPendingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentRefund(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, bool offline, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offlineSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            this.Invoke("SetOrderPaymentRefund", new object[] {
                        orderId,
                        orderIdSpecified,
                        offline,
                        offlineSpecified,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentRefundAsync(int orderId, bool orderIdSpecified, bool offline, bool offlineSpecified, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentRefundAsync(orderId, orderIdSpecified, offline, offlineSpecified, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentRefundAsync(int orderId, bool orderIdSpecified, bool offline, bool offlineSpecified, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentRefundOperationCompleted == null)) {
                this.SetOrderPaymentRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentRefundOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentRefund", new object[] {
                        orderId,
                        orderIdSpecified,
                        offline,
                        offlineSpecified,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentRefundOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentRefundOperationCompleted(object arg) {
            if ((this.SetOrderPaymentRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrdersStatusCanceled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
        public OrderError[] SetOrdersStatusCanceled([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] int[] ordersId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("SetOrdersStatusCanceled", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword});
            return ((OrderError[])(results[0]));
        }
        
        /// <remarks/>
        public void SetOrdersStatusCanceledAsync(int[] ordersId, string usernameOrEmail, string userPassword) {
            this.SetOrdersStatusCanceledAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrdersStatusCanceledAsync(int[] ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrdersStatusCanceledOperationCompleted == null)) {
                this.SetOrdersStatusCanceledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrdersStatusCanceledOperationCompleted);
            }
            this.InvokeAsync("SetOrdersStatusCanceled", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.SetOrdersStatusCanceledOperationCompleted, userState);
        }
        
        private void OnSetOrdersStatusCanceledOperationCompleted(object arg) {
            if ((this.SetOrdersStatusCanceledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrdersStatusCanceledCompleted(this, new SetOrdersStatusCanceledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/RegisterNewCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterNewCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userFirstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userLastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userBirthDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGender, out int RegisterNewCustomerResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RegisterNewCustomerResultSpecified) {
            object[] results = this.Invoke("RegisterNewCustomer", new object[] {
                        adminEmail,
                        adminPassword,
                        userName,
                        userEmail,
                        userPassword,
                        userFirstName,
                        userLastName,
                        userBirthDate,
                        userGender});
            RegisterNewCustomerResult = ((int)(results[0]));
            RegisterNewCustomerResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RegisterNewCustomerAsync(string adminEmail, string adminPassword, string userName, string userEmail, string userPassword, string userFirstName, string userLastName, string userBirthDate, string userGender) {
            this.RegisterNewCustomerAsync(adminEmail, adminPassword, userName, userEmail, userPassword, userFirstName, userLastName, userBirthDate, userGender, null);
        }
        
        /// <remarks/>
        public void RegisterNewCustomerAsync(string adminEmail, string adminPassword, string userName, string userEmail, string userPassword, string userFirstName, string userLastName, string userBirthDate, string userGender, object userState) {
            if ((this.RegisterNewCustomerOperationCompleted == null)) {
                this.RegisterNewCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewCustomerOperationCompleted);
            }
            this.InvokeAsync("RegisterNewCustomer", new object[] {
                        adminEmail,
                        adminPassword,
                        userName,
                        userEmail,
                        userPassword,
                        userFirstName,
                        userLastName,
                        userBirthDate,
                        userGender}, this.RegisterNewCustomerOperationCompleted, userState);
        }
        
        private void OnRegisterNewCustomerOperationCompleted(object arg) {
            if ((this.RegisterNewCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewCustomerCompleted(this, new RegisterNewCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/LoginCutomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginCutomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, out int LoginCutomerResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool LoginCutomerResultSpecified) {
            object[] results = this.Invoke("LoginCutomer", new object[] {
                        usernameOrEmail,
                        userPassword});
            LoginCutomerResult = ((int)(results[0]));
            LoginCutomerResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void LoginCutomerAsync(string usernameOrEmail, string userPassword) {
            this.LoginCutomerAsync(usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void LoginCutomerAsync(string usernameOrEmail, string userPassword, object userState) {
            if ((this.LoginCutomerOperationCompleted == null)) {
                this.LoginCutomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginCutomerOperationCompleted);
            }
            this.InvokeAsync("LoginCutomer", new object[] {
                        usernameOrEmail,
                        userPassword}, this.LoginCutomerOperationCompleted, userState);
        }
        
        private void OnLoginCutomerOperationCompleted(object arg) {
            if ((this.LoginCutomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCutomerCompleted(this, new LoginCutomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateGenericAttribute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGenericAttribute([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("UpdateGenericAttribute", new object[] {
                        userEmail,
                        userPassword,
                        Key,
                        Value});
        }
        
        /// <remarks/>
        public void UpdateGenericAttributeAsync(string userEmail, string userPassword, string Key, string Value) {
            this.UpdateGenericAttributeAsync(userEmail, userPassword, Key, Value, null);
        }
        
        /// <remarks/>
        public void UpdateGenericAttributeAsync(string userEmail, string userPassword, string Key, string Value, object userState) {
            if ((this.UpdateGenericAttributeOperationCompleted == null)) {
                this.UpdateGenericAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGenericAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateGenericAttribute", new object[] {
                        userEmail,
                        userPassword,
                        Key,
                        Value}, this.UpdateGenericAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateGenericAttributeOperationCompleted(object arg) {
            if ((this.UpdateGenericAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGenericAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateGenericAttributeByCustomerId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGenericAttributeByCustomerId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminPassword, int customerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool customerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("UpdateGenericAttributeByCustomerId", new object[] {
                        adminEmail,
                        adminPassword,
                        customerId,
                        customerIdSpecified,
                        Key,
                        Value});
        }
        
        /// <remarks/>
        public void UpdateGenericAttributeByCustomerIdAsync(string adminEmail, string adminPassword, int customerId, bool customerIdSpecified, string Key, string Value) {
            this.UpdateGenericAttributeByCustomerIdAsync(adminEmail, adminPassword, customerId, customerIdSpecified, Key, Value, null);
        }
        
        /// <remarks/>
        public void UpdateGenericAttributeByCustomerIdAsync(string adminEmail, string adminPassword, int customerId, bool customerIdSpecified, string Key, string Value, object userState) {
            if ((this.UpdateGenericAttributeByCustomerIdOperationCompleted == null)) {
                this.UpdateGenericAttributeByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGenericAttributeByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("UpdateGenericAttributeByCustomerId", new object[] {
                        adminEmail,
                        adminPassword,
                        customerId,
                        customerIdSpecified,
                        Key,
                        Value}, this.UpdateGenericAttributeByCustomerIdOperationCompleted, userState);
        }
        
        private void OnUpdateGenericAttributeByCustomerIdOperationCompleted(object arg) {
            if ((this.UpdateGenericAttributeByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGenericAttributeByCustomerIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetCustomerData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernameOrEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int customerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool customerIdSpecified) {
            object[] results = this.Invoke("GetCustomerData", new object[] {
                        usernameOrEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerDataAsync(string usernameOrEmail, string userPassword, int customerId, bool customerIdSpecified) {
            this.GetCustomerDataAsync(usernameOrEmail, userPassword, customerId, customerIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetCustomerDataAsync(string usernameOrEmail, string userPassword, int customerId, bool customerIdSpecified, object userState) {
            if ((this.GetCustomerDataOperationCompleted == null)) {
                this.GetCustomerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDataOperationCompleted);
            }
            this.InvokeAsync("GetCustomerData", new object[] {
                        usernameOrEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified}, this.GetCustomerDataOperationCompleted, userState);
        }
        
        private void OnGetCustomerDataOperationCompleted(object arg) {
            if ((this.GetCustomerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerDataCompleted(this, new GetCustomerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/RegisterNewVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterNewVendor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email, int CustomerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool CustomerIdSpecified, out int RegisterNewVendorResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RegisterNewVendorResultSpecified) {
            object[] results = this.Invoke("RegisterNewVendor", new object[] {
                        userEmail,
                        userPassword,
                        Name,
                        Email,
                        CustomerId,
                        CustomerIdSpecified});
            RegisterNewVendorResult = ((int)(results[0]));
            RegisterNewVendorResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RegisterNewVendorAsync(string userEmail, string userPassword, string Name, string Email, int CustomerId, bool CustomerIdSpecified) {
            this.RegisterNewVendorAsync(userEmail, userPassword, Name, Email, CustomerId, CustomerIdSpecified, null);
        }
        
        /// <remarks/>
        public void RegisterNewVendorAsync(string userEmail, string userPassword, string Name, string Email, int CustomerId, bool CustomerIdSpecified, object userState) {
            if ((this.RegisterNewVendorOperationCompleted == null)) {
                this.RegisterNewVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewVendorOperationCompleted);
            }
            this.InvokeAsync("RegisterNewVendor", new object[] {
                        userEmail,
                        userPassword,
                        Name,
                        Email,
                        CustomerId,
                        CustomerIdSpecified}, this.RegisterNewVendorOperationCompleted, userState);
        }
        
        private void OnRegisterNewVendorOperationCompleted(object arg) {
            if ((this.RegisterNewVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewVendorCompleted(this, new RegisterNewVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/PasswordRecovery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PasswordRecovery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email, out bool PasswordRecoveryResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool PasswordRecoveryResultSpecified) {
            object[] results = this.Invoke("PasswordRecovery", new object[] {
                        userEmail,
                        userPassword,
                        Email});
            PasswordRecoveryResult = ((bool)(results[0]));
            PasswordRecoveryResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void PasswordRecoveryAsync(string userEmail, string userPassword, string Email) {
            this.PasswordRecoveryAsync(userEmail, userPassword, Email, null);
        }
        
        /// <remarks/>
        public void PasswordRecoveryAsync(string userEmail, string userPassword, string Email, object userState) {
            if ((this.PasswordRecoveryOperationCompleted == null)) {
                this.PasswordRecoveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPasswordRecoveryOperationCompleted);
            }
            this.InvokeAsync("PasswordRecovery", new object[] {
                        userEmail,
                        userPassword,
                        Email}, this.PasswordRecoveryOperationCompleted, userState);
        }
        
        private void OnPasswordRecoveryOperationCompleted(object arg) {
            if ((this.PasswordRecoveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PasswordRecoveryCompleted(this, new PasswordRecoveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetVendorsFollowing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetVendorsFollowing([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int customerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool customerIdSpecified) {
            object[] results = this.Invoke("GetVendorsFollowing", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorsFollowingAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified) {
            this.GetVendorsFollowingAsync(userEmail, userPassword, customerId, customerIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetVendorsFollowingAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified, object userState) {
            if ((this.GetVendorsFollowingOperationCompleted == null)) {
                this.GetVendorsFollowingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorsFollowingOperationCompleted);
            }
            this.InvokeAsync("GetVendorsFollowing", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified}, this.GetVendorsFollowingOperationCompleted, userState);
        }
        
        private void OnGetVendorsFollowingOperationCompleted(object arg) {
            if ((this.GetVendorsFollowingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorsFollowingCompleted(this, new GetVendorsFollowingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetVendorsFollowingSeeMore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetVendorsFollowingSeeMore([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int customerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool customerIdSpecified, int lastid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastidSpecified) {
            object[] results = this.Invoke("GetVendorsFollowingSeeMore", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified,
                        lastid,
                        lastidSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorsFollowingSeeMoreAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified, int lastid, bool lastidSpecified) {
            this.GetVendorsFollowingSeeMoreAsync(userEmail, userPassword, customerId, customerIdSpecified, lastid, lastidSpecified, null);
        }
        
        /// <remarks/>
        public void GetVendorsFollowingSeeMoreAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified, int lastid, bool lastidSpecified, object userState) {
            if ((this.GetVendorsFollowingSeeMoreOperationCompleted == null)) {
                this.GetVendorsFollowingSeeMoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorsFollowingSeeMoreOperationCompleted);
            }
            this.InvokeAsync("GetVendorsFollowingSeeMore", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified,
                        lastid,
                        lastidSpecified}, this.GetVendorsFollowingSeeMoreOperationCompleted, userState);
        }
        
        private void OnGetVendorsFollowingSeeMoreOperationCompleted(object arg) {
            if ((this.GetVendorsFollowingSeeMoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorsFollowingSeeMoreCompleted(this, new GetVendorsFollowingSeeMoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/getSlugName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getSlugName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string entityName, int entityId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool entityIdSpecified, int languageId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool languageIdSpecified) {
            object[] results = this.Invoke("getSlugName", new object[] {
                        userEmail,
                        userPassword,
                        entityName,
                        entityId,
                        entityIdSpecified,
                        languageId,
                        languageIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSlugNameAsync(string userEmail, string userPassword, string entityName, int entityId, bool entityIdSpecified, int languageId, bool languageIdSpecified) {
            this.getSlugNameAsync(userEmail, userPassword, entityName, entityId, entityIdSpecified, languageId, languageIdSpecified, null);
        }
        
        /// <remarks/>
        public void getSlugNameAsync(string userEmail, string userPassword, string entityName, int entityId, bool entityIdSpecified, int languageId, bool languageIdSpecified, object userState) {
            if ((this.getSlugNameOperationCompleted == null)) {
                this.getSlugNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSlugNameOperationCompleted);
            }
            this.InvokeAsync("getSlugName", new object[] {
                        userEmail,
                        userPassword,
                        entityName,
                        entityId,
                        entityIdSpecified,
                        languageId,
                        languageIdSpecified}, this.getSlugNameOperationCompleted, userState);
        }
        
        private void OngetSlugNameOperationCompleted(object arg) {
            if ((this.getSlugNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSlugNameCompleted(this, new getSlugNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ProductVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet ProductVendor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int vendorId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool vendorIdSpecified) {
            object[] results = this.Invoke("ProductVendor", new object[] {
                        userEmail,
                        userPassword,
                        vendorId,
                        vendorIdSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorAsync(string userEmail, string userPassword, int vendorId, bool vendorIdSpecified) {
            this.ProductVendorAsync(userEmail, userPassword, vendorId, vendorIdSpecified, null);
        }
        
        /// <remarks/>
        public void ProductVendorAsync(string userEmail, string userPassword, int vendorId, bool vendorIdSpecified, object userState) {
            if ((this.ProductVendorOperationCompleted == null)) {
                this.ProductVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorOperationCompleted);
            }
            this.InvokeAsync("ProductVendor", new object[] {
                        userEmail,
                        userPassword,
                        vendorId,
                        vendorIdSpecified}, this.ProductVendorOperationCompleted, userState);
        }
        
        private void OnProductVendorOperationCompleted(object arg) {
            if ((this.ProductVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorCompleted(this, new ProductVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ProductVendorSeeMore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet ProductVendorSeeMore([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int vendorId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool vendorIdSpecified, int lastid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastidSpecified) {
            object[] results = this.Invoke("ProductVendorSeeMore", new object[] {
                        userEmail,
                        userPassword,
                        vendorId,
                        vendorIdSpecified,
                        lastid,
                        lastidSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorSeeMoreAsync(string userEmail, string userPassword, int vendorId, bool vendorIdSpecified, int lastid, bool lastidSpecified) {
            this.ProductVendorSeeMoreAsync(userEmail, userPassword, vendorId, vendorIdSpecified, lastid, lastidSpecified, null);
        }
        
        /// <remarks/>
        public void ProductVendorSeeMoreAsync(string userEmail, string userPassword, int vendorId, bool vendorIdSpecified, int lastid, bool lastidSpecified, object userState) {
            if ((this.ProductVendorSeeMoreOperationCompleted == null)) {
                this.ProductVendorSeeMoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorSeeMoreOperationCompleted);
            }
            this.InvokeAsync("ProductVendorSeeMore", new object[] {
                        userEmail,
                        userPassword,
                        vendorId,
                        vendorIdSpecified,
                        lastid,
                        lastidSpecified}, this.ProductVendorSeeMoreOperationCompleted, userState);
        }
        
        private void OnProductVendorSeeMoreOperationCompleted(object arg) {
            if ((this.ProductVendorSeeMoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorSeeMoreCompleted(this, new ProductVendorSeeMoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetFollowingProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetFollowingProducts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, int customerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool customerIdSpecified) {
            object[] results = this.Invoke("GetFollowingProducts", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFollowingProductsAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified) {
            this.GetFollowingProductsAsync(userEmail, userPassword, customerId, customerIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetFollowingProductsAsync(string userEmail, string userPassword, int customerId, bool customerIdSpecified, object userState) {
            if ((this.GetFollowingProductsOperationCompleted == null)) {
                this.GetFollowingProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFollowingProductsOperationCompleted);
            }
            this.InvokeAsync("GetFollowingProducts", new object[] {
                        userEmail,
                        userPassword,
                        customerId,
                        customerIdSpecified}, this.GetFollowingProductsOperationCompleted, userState);
        }
        
        private void OnGetFollowingProductsOperationCompleted(object arg) {
            if ((this.GetFollowingProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFollowingProductsCompleted(this, new GetFollowingProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetStatisticsVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetStatisticsVendor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword) {
            object[] results = this.Invoke("GetStatisticsVendor", new object[] {
                        userEmail,
                        userPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsVendorAsync(string userEmail, string userPassword) {
            this.GetStatisticsVendorAsync(userEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void GetStatisticsVendorAsync(string userEmail, string userPassword, object userState) {
            if ((this.GetStatisticsVendorOperationCompleted == null)) {
                this.GetStatisticsVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsVendorOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsVendor", new object[] {
                        userEmail,
                        userPassword}, this.GetStatisticsVendorOperationCompleted, userState);
        }
        
        private void OnGetStatisticsVendorOperationCompleted(object arg) {
            if ((this.GetStatisticsVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsVendorCompleted(this, new GetStatisticsVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class OrderError {
        
        private string errorMessageField;
        
        private int orderIdField;
        
        private bool orderIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderIdSpecified {
            get {
                return this.orderIdFieldSpecified;
            }
            set {
                this.orderIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPaymentMethodCompletedEventHandler(object sender, GetPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteDataSetCompletedEventHandler(object sender, ExecuteDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteScalarCompletedEventHandler(object sender, ExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrdersCompletedEventHandler(object sender, DeleteOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderError[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOrderNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOrderBillingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOrderShippingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrderPaymentPaidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrderPaymentPaidWithMethodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrderPaymentPendingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrderPaymentRefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrdersStatusCanceledCompletedEventHandler(object sender, SetOrdersStatusCanceledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOrdersStatusCanceledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOrdersStatusCanceledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderError[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterNewCustomerCompletedEventHandler(object sender, RegisterNewCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int RegisterNewCustomerResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RegisterNewCustomerResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginCutomerCompletedEventHandler(object sender, LoginCutomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCutomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCutomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int LoginCutomerResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool LoginCutomerResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateGenericAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateGenericAttributeByCustomerIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCustomerDataCompletedEventHandler(object sender, GetCustomerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterNewVendorCompletedEventHandler(object sender, RegisterNewVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int RegisterNewVendorResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RegisterNewVendorResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PasswordRecoveryCompletedEventHandler(object sender, PasswordRecoveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PasswordRecoveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PasswordRecoveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool PasswordRecoveryResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool PasswordRecoveryResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorsFollowingCompletedEventHandler(object sender, GetVendorsFollowingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorsFollowingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorsFollowingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorsFollowingSeeMoreCompletedEventHandler(object sender, GetVendorsFollowingSeeMoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorsFollowingSeeMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorsFollowingSeeMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSlugNameCompletedEventHandler(object sender, getSlugNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSlugNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSlugNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProductVendorCompletedEventHandler(object sender, ProductVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProductVendorSeeMoreCompletedEventHandler(object sender, ProductVendorSeeMoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorSeeMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorSeeMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFollowingProductsCompletedEventHandler(object sender, GetFollowingProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFollowingProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFollowingProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStatisticsVendorCompletedEventHandler(object sender, GetStatisticsVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591